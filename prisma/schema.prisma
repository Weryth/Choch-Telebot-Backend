// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String?
  provider  Provider?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  roles     Role[]
  Token     Token[]
  bots      Bots[]
  isBlocked Boolean   @default(false) @map("is_blocked")

  @@map("users")
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  userAgent String   @map("user_agent")

  @@map("tokens")
}

model Bots {
  id        String    @id @default(uuid())
  bottoken  String    @unique
  botname   String    @default("Bot")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  isActive  Boolean   @default(false)
  quests Questions[]
}

model Questions {
  id String @id @default(uuid())
  quest String
  answer String
  createdAt DateTime  @default(now()) @map("created_at")
  bot Bots @relation(fields: [botId],references: [id])
  botId String
}


enum Role {
  ADMIN
  USER
}

enum Provider {
  GOOGLE
  YANDEX
}
